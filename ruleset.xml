<?xml version="1.0" ?>
<ruleset name="Sportisimo">
    <descrition>Sportisimo selection from default sniffs</descrition>

    <excude name="Sniffs.Commenting.MethodCommentReturnTagSniff" />
    <!-- Classes -->
    <rule ref="Generic.Classes.DuplicateClassName"/>
    <rule ref="PSR2.Classes.PropertyDeclaration"/>
    <rule ref="Squiz.Classes.ValidClassName"/>
    <rule ref="Squiz.Classes.LowercaseClassKeywords"/>

    <!-- CodeAnalysis -->
    <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
    <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>
    <rule ref="Generic.Arrays.DisallowLongArraySyntax"/>

    <!-- ControlStructures -->
    <rule ref="Generic.ControlStructures.InlineControlStructure"/>
    <rule ref="PSR2.ControlStructures.ElseIfDeclaration"/>
    <rule ref="PSR2.ControlStructures.SwitchDeclaration">
        <properties>
            <property name="indent" value="2"/>
        </properties>
    </rule>
    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration"/>
    <rule ref="Squiz.ControlStructures.LowercaseDeclaration"/>

    <!-- Files -->
    <rule ref="Generic.Files.ByteOrderMark"/>
    <rule ref="Generic.Files.LineLength">
        <properties>
            <property name="lineLimit" value="150"/>
            <property name="absoluteLineLimit" value="150"/>
        </properties>
        <severity>3</severity>
    </rule>
    <rule ref="Generic.Files.OneClassPerFile"/>
    <rule ref="Generic.Files.OneTraitPerFile"/>
    <rule ref="Generic.Files.OneInterfacePerFile"/>
    <rule ref="PSR2.Files.EndFileNewline"/>
    <rule ref="PSR2.Files.ClosingTag"/>

    <!-- Formatting -->
    <rule ref="Generic.Formatting.DisallowMultipleStatements"/>
    <rule ref="Generic.Formatting.DisallowMultipleStatements.SameLine">
        <severity>0</severity>
    </rule>
    <rule ref="Generic.Formatting.SpaceAfterCast"/>

    <!-- Functions -->
    <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
    <rule ref="PEAR.Functions.ValidDefaultValue"/>
    <rule ref="Squiz.Functions.FunctionDeclaration"/>
    <properties>
        <property name="equalsSpacing" value="0"/>
    </properties>
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing">
        <properties>
            <property name="equalsSpacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.Functions.MultiLineFunctionDeclaration">
        <properties>
            <property name="indent" value="2"/>
        </properties>
    </rule>
    <rule ref="Squiz.Functions.LowercaseFunctionKeywords"/>

    <!-- Methods -->
    <rule ref="PSR2.Methods.MethodDeclaration"/>
    <rule ref="PSR2.Methods.FunctionClosingBrace"/>

    <!-- Namespaces -->
    <!--<rule ref="PSR2.Namespaces.NamespaceDeclaration"/>-->
    <rule ref="PSR2.Namespaces.UseDeclaration"/>

    <!-- Metrics -->
    <rule ref="Generic.Metrics.CyclomaticComplexity"/>
    <rule ref="Generic.Metrics.NestingLevel">
        <properties>
            <property name="nestingLevel" value="3"/>
            <property name="absoluteNestingLevel" value="6"/>
        </properties>
    </rule>

    <!-- NamingConventions -->
    <rule ref="Generic.NamingConventions.UpperCaseConstantName"/>

    <!-- PHP -->
    <rule ref="Generic.PHP.Syntax"/>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.LowerCaseKeyword"/>
    <rule ref="Generic.PHP.DisallowShortOpenTag"/>
    <rule ref="Generic.PHP.LowerCaseConstant"/>
    <rule ref="Generic.PHP.NoSilencedErrors"/>
    <rule ref="MySource.PHP.EvalObjectFactory"/>
    <rule ref="MySource.PHP.GetRequestData"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>

    <!-- WhiteSpace -->
    <rule ref="Squiz.WhiteSpace.MemberVarSpacing"/>
    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeKeywordSpacing"/>
    <rule ref="Squiz.WhiteSpace.ScopeClosingBrace"/>
    <rule ref="Squiz.WhiteSpace.FunctionSpacing">
        <properties>
            <property name="spacing" value="1"/>
        </properties>
    </rule>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace">
        <properties>
            <property name="ignoreBlankLines" value="false"/>
        </properties>
    </rule>

    <rule ref="Squiz.Commenting.FunctionComment">
        <exclude name="Squiz.Commenting.FunctionComment.EmptyThrows"/><!-- @throws are forbidden -->
        <exclude name="Squiz.Commenting.FunctionComment.IncorrectTypeHint"/><!-- collection syntax such as string[] is not supported -->
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturn"/><!-- enforces incorrect types -->
        <exclude name="Squiz.Commenting.FunctionComment.InvalidReturnNotVoid"/><!-- is not able to detect return types such as string|null as correct -->
        <exclude name="Squiz.Commenting.FunctionComment.InvalidThrows"/><!-- @throws are forbidden -->
        <exclude name="Squiz.Commenting.FunctionComment.Missing"/><!-- PHPDoc is not required on all methods -->
        <exclude name="Squiz.Commenting.FunctionComment.MissingParamComment"/><!-- comments are not required for @param -->
        <!--<exclude name="Squiz.Commenting.FunctionComment.MissingReturn"/>&lt;!&ndash; void type is not used &ndash;&gt;-->
        <exclude name="Squiz.Commenting.FunctionComment.ParamCommentFullStop"/><!-- comments don't have to be sentences -->
        <!--<exclude name="Squiz.Commenting.FunctionComment.ParamCommentNotCapital"/>&lt;!&ndash; comments don't have to be sentences &ndash;&gt;-->
        <exclude name="Squiz.Commenting.FunctionComment.ScalarTypeHintMissing"/><!-- works only for code requiring PHP 7 code or better -->
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamName"/><!-- we don't want spacing with alignment -->
        <exclude name="Squiz.Commenting.FunctionComment.SpacingAfterParamType"/><!-- we don't want spacing with alignment -->
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNoFullStop"/><!-- @throws are forbidden -->
        <exclude name="Squiz.Commenting.FunctionComment.ThrowsNotCapital"/><!-- @throws are forbidden -->
        <exclude name="Squiz.Commenting.FunctionComment.TypeHintMissing"/><!-- doesn't work with self as typehint -->
    </rule>


    <rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/ruleset.xml">
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameAfterKeyword"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedExceptions"/>
        <exclude name="SlevomatCodingStandard.Namespaces.FullyQualifiedClassNameInAnnotation"/>
        <exclude name="SlevomatCodingStandard.Namespaces.UseOnlyWhitelistedNamespaces"/>
        <exclude name="SlevomatCodingStandard.Namespaces.AlphabeticallySortedUses"/>
        <exclude name="SlevomatCodingStandard.Files.TypeNameMatchesFileName"/>
        <exclude name="SlevomatCodingStandard.ControlStructures.DisallowEqualOperators"/>
    </rule>

    <rule ref="SlevomatCodingStandard.TypeHints.TypeHintDeclaration">
        <properties>
            <property name="usefulAnnotations" type="array" value="
				@route,
				@throws,
				@internal,
				@covers,
				@depends
			"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.UnusedUses">
        <properties>
            <property name="searchAnnotations" value="true"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Namespaces.ReferenceUsedNamesOnly">
        <properties>
            <property name="allowFullyQualifiedNameForCollidingClasses" value="true"/>
            <property name="allowFullyQualifiedExceptions" value="true"/>
        </properties>
    </rule>

</ruleset>